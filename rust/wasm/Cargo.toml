[package]
name = "wasm"
version = "0.1.0"
authors = ["Julien de Charentenay <julien@charentenay.me>"]
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
js-sys = "0.3.51"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
# serde-wasm-bindgen = "0.1"
simple-error = "0.2"
uuid = { version = "0.8", features = ["serde", "wasm-bindgen", "v4"] }
# nanoid = "0.4"
nalgebra = "0.24"
bincode = "^1.3"

vortex-particle-simulation = { path = "../vortex-particle-simulation" }

[dependencies.web-sys]
version = "0.3"
features = [
  'console',
  'Document',
  'Element',
  'HtmlCanvasElement',
  'MouseEvent',
  'WebGlBuffer',
  'WebGlVertexArrayObject',
  'WebGl2RenderingContext',
  'WebGlProgram',
  'WebGlShader',
  'WebGlUniformLocation',
  'Window',
  'Performance',
]

#[target.wasm32.unknown.unknown]
#rustflags = [
    ## Enabled unstable APIs from web_sys
    #"--cfg=web_sys_unstable_apis",
    ## Enables features which are required for shared-memory
    #"-C", "target-feature=+atomics,+bulk-memory,+mutable-globals",
    ## Enables the possibility to import memory into wasm.
    ## Without --shared-memory it is not possible to use shared WebAssembly.Memory.
    #"-C", "link-args=--shared-memory --import-memory",
#]
